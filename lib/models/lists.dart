import 'package:flutter/material.dart';

const String maintitleEN = 'Rotation Time',
    language = 'ENGLISH';

final List<String> languagesList = [
  "English",
  "עברית"
];


final List<String> languagesCodeList = [
  "EN",
  "HE"
];

final List<String> titlesEN = [
  'One Hexagram',
  'Langauge is Hexagram',
  'Table Hexagram',
  'Atro Planets',
  'HD Chart',
];

final List<String> planetsfullList = [
  'assets/planets/northnode.png',
  'assets/planets/sun.png',
  'assets/planets/moon.png',
  'assets/planets/mercury.png',
  'assets/planets/venus.png',
  'assets/planets/mars.png',
  'assets/planets/jupiter.png',
  'assets/planets/saturn.png',
  'assets/planets/uranus.png',
  'assets/planets/neptune.png',
  'assets/planets/pluto.png',
  'assets/planets/earth.png',
  'assets/planets/southnode.png',
];

final List<String> planetspartialList = [
  'assets/planets/sun.png',
  'assets/planets/earth.png',
  'assets/planets/moon.png',
  'assets/planets/mercury.png',
  'assets/planets/venus.png',
  'assets/planets/mars.png',
  'assets/planets/jupiter.png',
  'assets/planets/saturn.png',
  'assets/planets/uranus.png',
  'assets/planets/neptune.png',
  'assets/planets/pluto.png',
];

final List<String> planetsNamesList = [
  'SUN',
  'EARTH',
  'MOON',
  'MERCURY',
  'VENUS',
  'MARS',
  'JUPITER',
  'SATURN',
  'URANUS',
  'NEPTUNE',
  'PLUTO',
];

final List<String> planetsCrossList = [
  'assets/planets/northnode.png',
  'assets/planets/sun.png',
  'assets/planets/earth.png',
  'assets/planets/southnode.png',
];

final List<String> hexList = [
  'assets/complexup.png',
  'assets/simplein.png',
  'assets/breathout.png',
  'assets/silencedown.png',
];

final List<String> fontHexOrderList = [
  'a',
  'b',
  'c',
  'd',
  'e',
  'f',
  'g',
  'h',
  'i',
  'j',
  'k',
  'l',
  'm',
  'n',
  'o',
  'p',
  'q',
  'r',
  's',
  't',
  'u',
  'v',
  'w',
  'x',
  'y',
  'z',
  '1',
  '2',
  '3',
  '4',
  '5',
  '6',
  '7',
  '8',
  '9',
  '0',
  '!',
  '@',
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'I',
  'J',
  'K',
  'L',
  'M',
  'N',
  'O',
  'P',
  'Q',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'X',
  'Y',
  'Z'
];

final List<int> fontHexNumbersList = [
  1,
  44,
  13,
  10,
  9,
  14,
  43,
  33,
  25,
  61,
  26,
  34,
  6,
  37,
  38,
  5,
  57,
  30,
  58,
  50,
  49,
  28,
  12,
  42,
  41,
  11,
  62,
  45,
  29,
  39,
  40,
  24,
  7,
  15,
  16,
  8,
  23,
  2,
  59,
  22,
  54,
  53,
  21,
  60,
  18,
  55,
  56,
  17,
  32,
  31,
  47,
  48,
  63,
  64,
  20,
  27,
  19,
  4,
  36,
  52,
  51,
  35,
  3,
  46
];

final List<int> orderHexagramsWheel = [
  //qurater mutation complex
  1, 43, 14, 34,
  9, 5, 26, 11,
  10, 58, 38, 54,
  61, 60, 41, 19,

  //quarter initation simple
  13, 49, 30, 55,
  37, 63, 22, 36,
  25, 17, 21, 51,
  42, 3, 27, 24,

  //quarter civilization silence
  2, 23, 8, 20,
  16, 35, 45, 12,
  15, 52, 39, 53,
  62, 56, 31, 33,

  //quarter duality breath
  7, 4, 29, 59,
  40, 64, 47, 6,
  46, 18, 48, 57,
  32, 50, 28, 44,
];

final List<int> orderHexagramsToCalulateWheel = [
  //qurater mutation complex
  41, 19,

  //quarter initation simple
  13, 49, 30, 55,
  37, 63, 22, 36,
  25, 17, 21, 51,
  42, 3, 27, 24,

  //quarter civilization silence
  2, 23, 8, 20,
  16, 35, 45, 12,
  15, 52, 39, 53,
  62, 56, 31, 33,

  //quarter duality breath
  7, 4, 29, 59,
  40, 64, 47, 6,
  46, 18, 48, 57,
  32, 50, 28, 44,

  1, 43, 14, 34,
  9, 5, 26, 11,
  10, 58, 38, 54,
  61, 60
];

final List<String> orderHexagramsWheelORIGINAL = [
  //qurater mutation complex
  '1', '43', '14', '34',
  '9', '5', '26', '11',
  '10', '58', '38', '54',
  '61', '60', '41', '19',

  //quarter initation simple
  '13', '49', '30', '55',
  '37', '63', '22', '36',
  '25', '17', '21', '51',
  '42', '3', '27', '24',

  //quarter civilization silence
  '2', '23', '8', '20',
  '16', '35', '45', '12',
  '15', '52', '39', '53',
  '62', '56', '31', '33',

  //quarter duality breath
  '7', '4', '29', '59',
  '40', '64', '47', '6',
  '46', '18', '48', '57',
  '32', '50', '28', '44',
];

final List<int> hexCarouselAlignList = [
  1,
];
final List<String> hexagramNames = [
  //qurater mutation complex
  'ZERO', 'The Creative', 'The Responsive', 'Mutative', 'Logic',
  'Waiting', 'Friction', 'Interactive', 'Contribution',
  'Focus', 'Selfish', 'Ideally', 'Cautious',
  'Listening', 'Wealthy', 'Extreme', 'Skillful',

  //quarter initation simple
  'Opinions', 'Correcting', 'Needy', 'Now',
  'Control', 'Grace', 'Assimilation', 'Return',
  'Innocence', 'Tricky', 'Caring', 'Player',
  'Watery', 'Fiery', 'Leading', 'Continuity',

  //quarter civilization silence
  'Memory', 'Powerful', 'Progressive', 'Crisis',
  'Family', 'Fighter', 'Provocation', 'Employed',
  'Fantasy', 'End', 'Knowing', 'Spotted',
  'King', 'Determined', 'Oppressed', 'Deep',

  //quarter duality breath
  'Revolutionary', 'Valued', 'Shocking', 'Still',
  'Begin', 'Ambitious', 'Spirit', 'Storyteller',
  'Wind', 'Joyous', 'Sexual', 'Constrained',
  'Mysterious', 'Detailed', 'Doubtful', 'Confused',
];

/// FULL SENTENCE

final List hexSentenceList = [
  0,
  'Adjective',
  'Subject',
  'Verb',
  'Adverb',
  1,
  'Creative',
  'Creativity',
  'Creates',
  'Creatively',
  2,
  'Responsive',
  'Response',
  'Responds',
  'Responsively',
  3,
  'Different',
  'Mutation',
  'Mutates',
  'Differently',
  4,
  'Chaotic',
  'Answer',
  'Answers',
  'Chaotically',
  5,
  'Patient',
  'Patience',
  'Waits',
  'Patiently',
  6,
  'Conflicting',
  'Conflict',
  'Conflicts',
  'Conflictingly',
  7,
  'Interactive',
  'Interaction',
  'Interacts',
  'Interactively',
  8,
  'Contributing',
  'Contribution',
  'Contributes',
  'Uniquely',
  9,
  'Focused',
  'Focus',
  'Focuses',
  'Focusingly',
  10,
  'Selfing',
  'Self',
  'Selfs',
  'Selfingly',
  11,
  'Ideal',
  'Idea',
  'Ideas',
  'Ideally',
  12,
  'Cautious',
  'Caution',
  'Cautions',
  'Cautiously',
  13,
  'Secret',
  'Secret',
  'Hides',
  'Secretly',
  14,
  'Wealthy',
  'Wealth',
  'Enriches',
  'Wealthfully',
  15,
  'Extreme',
  'Extreme',
  'Extremes',
  'Extremely',
  16,
  'Skillful',
  'Skill',
  'Identifies',
  'Skillfully',
  17,
  'Hierarchical',
  'Hierarchy',
  'Organizes',
  'Hierarchically',
  18,
  'Corrective',
  'Correction',
  'Corrects',
  'Correctly',
  19,
  'Needful',
  'Need',
  'Needs',
  'Needfully',
  20,
  'Attentive',
  'Attention',
  'Attends',
  'Attentively',
  21,
  'Controlled',
  'Control',
  'Controls',
  'Controllably',
  22,
  'Graceful',
  'Grace',
  'Graces',
  'Gracefully',
  23,
  'Assimilated',
  'Assimilation',
  'Assimilates',
  'Assimilably',
  24,
  'Rationalised',
  'Rationalisation',
  'Rationalises',
  'Rationally',
  25,
  'Innocent',
  'Innocence',
  'Innocences',
  'Innocently',
  26,
  'Tricky',
  'Trickster',
  'Tricks',
  'Trickily',
  27,
  'Caring',
  'Care',
  'Cares',
  'Carefully',
  28,
  'Risky',
  'Risk',
  'Risks',
  'Riskily',
  29,
  'Persevered',
  'Perseverance',
  'Perseveres',
  'Perseveringly',
  30,
  'Fiery',
  'Fire',
  'Fires',
  'Fiercely',
  31,
  'Leading',
  'Lead',
  'Leads',
  'Leadingly',
  32,
  'Failing',
  'Failure',
  'Fails',
  'Failingly',
  33,
  'Remembered',
  'Memory',
  'Remembers',
  'Privately',
  34,
  'Powerful',
  'Power',
  'Powers',
  'Powerfully',
  35,
  'Progressive',
  'Change',
  'Changes',
  'Progressively',
  36,
  'Endarkened',
  'Feeling',
  'Feels',
  'Fully',
  37,
  'Friendful',
  'Friend',
  'Befriends',
  'Friendly',
  38,
  'Fighting',
  'Fighter',
  'Fights',
  'Oppositely',
  39,
  'Provocative',
  'Provocation',
  'Provokes',
  'Provocatively',
  40,
  'Loyal',
  'Worker',
  'Works',
  'Loyally',
  41,
  'Fanciful',
  'Fantasy',
  'Fantasises',
  'Fancifully',
  42,
  'Ending',
  'End',
  'Ends',
  'Happily Ever After',
  43,
  'Insightful',
  'Insight',
  'Insights',
  'Insightfully',
  44,
  'Alertful',
  'Alert',
  'Alerts',
  'Alertly',
  45,
  'Bossy',
  'Boss',
  'Bosses',
  'Boastfully',
  46,
  'Determined',
  'Determination',
  'Determines',
  'Determinately',
  47,
  'Oppressed',
  'Oppression',
  'Oppresses',
  'Oppressively',
  48,
  'Deep',
  'Depth',
  'Deepens',
  'Deeply',
  49,
  'Revolutionary',
  'Revolution',
  'Revolutionizes',
  'Revolutionarily',
  50,
  'Valuable',
  'Value',
  'Values',
  'Valuably',
  51,
  'Shocking',
  'Shock',
  'Shocks',
  'Shockingly',
  52,
  'Mounted',
  'Mountain',
  'Mounts',
  'Mountfully',
  53,
  'First',
  'Beginning',
  'Begins',
  'At the Beginning',
  54,
  'Ambitious',
  'Ambition',
  'Drives',
  'Ambitiously',
  55,
  'Spirited',
  'Spirit',
  'Spirits',
  'Spiritually',
  56,
  'Believed',
  'Believer',
  'Believes',
  'Wonderingly',
  57,
  'Gentle',
  'GentleWind',
  'Blows',
  'Gently',
  58,
  'Joyous',
  'Joy',
  'Enjoys',
  'Joyously',
  59,
  'Sexual',
  'Sex',
  'Disperses',
  'Sexually',
  60,
  'Limited',
  'Limitation',
  'Limits',
  'Limitedly',
  61,
  'Truthful',
  'Truth',
  'Truths',
  'Truthfully',
  62,
  'Detailed',
  'Detail',
  'Details',
  'Detailedly',
  63,
  'Doubting',
  'Doubt',
  'Doubts',
  'Doubtfully',
  64,
  'Confusing',
  'Confusion',
  'Confuses',
  'Confusingly',
];

final List hexlinesList = [
  0,
  'grandmother',
  'mother',
  'daughter',
  'son',
  'father',
  'grandfather',
  1,
  'grandmother stuck in hell',
  'mother life is hell',
  'daughter complicated life',
  'son complicated life',
  'father is one foot from heaven',
  'grandfather died and is up in heaven',
  2,
  'grandmother remains silent',
  'mother tries to remain silent',
  'daughter suffers from silence',
  'son suffers from silence',
  'father is tortured from silence',
  'grandfather is silently falling from the top',
  3,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  4,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  5,
  'grandmother cannot wait in the Q',
  'mother waits impatiently in the Q',
  'daughter waits all life to blossom',
  'son does not wait and regrets',
  'father patience crosses oceans',
  'grandfather waits angrily',
  6,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  7,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  8,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  9,
  'grandmother focus is too bright',
  'mother focus is too light',
  'daughter focus runs away',
  'son focus on mothers and suffer with sister ',
  'father focus is tremendous and looks up to his father',
  'grandfather focus is in ultimate liberation',
  10,
  'grandmother good behavior is never seen',
  'mother good behavior is rarely appreciated',
  'daughter negative behavior fits her role',
  'son behavior is rewarded',
  'father behavior is known world wide',
  'grandfather behavior remembered for generations',
  11,
  'grandmother idea brings war',
  'mother idea brings no resolution',
  'daughter idea is to leave the family',
  'son is not peaceful with his ideas',
  'father is not the ideal father',
  'grandfather forgets all his memory',
  12,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  13,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  14,
  'grandmother wisdom is blackened',
  'mother wisdom is shadowed',
  'daughter wisdom cuts the feminine roots',
  'son is inspired to be like granfather and oppose his father',
  'father breath heavily and suffer',
  'grandfather is happy his grandson carries his wealth',
  15,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  16,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  17,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  18,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  19,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  20,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  21,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  22,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  23,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  24,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  25,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  26,
  'grandmother sells and loses everything',
  'mother sells loses most of it',
  'daughter sells but forget to collect',
  'son refuses to sell and sinks down',
  'father does not sell and is held responsible',
  'grandfather sells happily and cover for the entire family',
  27,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  28,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  29,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  30,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  31,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  32,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  33,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  34,
  'grandmother power is completely hidden',
  'mother power is considered negative',
  'daughter power is too light',
  'son power is stable and growing',
  'father power suffers the downfall',
  'grandfather power is disolved and not respected',
  35,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  36,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  37,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  38,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  39,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  40,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  41,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  42,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  43,
  'grandmother complex wisdom is never shown',
  'mother complex wisdom is seldom shown',
  'daughter cannot breakthrough the spell',
  'son is inspired to be wise like father',
  'father is simple and happy ',
  'grandfather simple wisdom not lived',
  44,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  45,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  46,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  47,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  48,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  49,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  50,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  51,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  52,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  53,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  54,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  55,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  56,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  57,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  58,
  'grandmother joy is regreted',
  'mother joy is hidden',
  'daughter lack of joy is forgiven',
  'son joy is satisfying',
  'father joy keeps people alive',
  'grandfather joy is a disease',
  59,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  60,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  61,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  62,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  63,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
  64,
  'grandmother joy is regreted XXX NOT DONE',
  'mother joy is hidden XXX NOT DONE',
  'daughter lack of joy is forgiven XXX NOT DONE',
  'son joy is satisfying XXX NOT DONE',
  'father joy keeps people alive XXX NOT DONE',
  'grandfather joy is a disease XXX NOT DONE',
];

final List<String> hexagramOriginSentenceList = [
  '0',
  'Zero',
  'Zero',
  'Zero',
  'Zero',
  '1',
  'Creative',
  'Creativity',
  'Creates',
  'Creatively',
  '2',
  'Responsive',
  'Response',
  'Responds',
  'Responsively',
  '3',
  'Different',
  'Mutation',
  'Mutates',
  'Differently',
  '4',
  'Chaotic',
  'Answer',
  'Answers',
  'Chaotically',
  '5',
  'Patient',
  'Patience',
  'Waits',
  'Patiently',
  '6',
  'Conflicting',
  'Conflict',
  'Conflicts',
  'Conflictingly',
  '7',
  'Interactive',
  'Interaction',
  'Interacts',
  'Interactively',
  '8',
  'Contributing',
  'Contribution',
  'Contributes',
  'Uniquely',
  '9',
  'Focused',
  'Focus',
  'Focuses',
  'Focusingly',
  '10',
  'Selfing',
  'Self',
  'Selfs',
  'Selfingly',
  '11',
  'Ideal',
  'Idea',
  'Ideas',
  'Ideally',
  '12',
  'Cautious',
  'Caution',
  'Cautions',
  'Cautiously',
  '13',
  'Secret',
  'Secret',
  'Hides',
  'Secretly',
  '14',
  'Wealthy',
  'Wealth',
  'Enriches',
  'Wealthfully',
  '15',
  'Extreme',
  'Extreme',
  'Extremes',
  'Extremely',
  '16',
  'Skillful',
  'Skill',
  'Identifies',
  'Skillfully',
  '17',
  'Hierarchical',
  'Hierarchy',
  'Organizes',
  'Hierarchically',
  '18',
  'Corrective',
  'Correction',
  'Corrects',
  'Correctly',
  '19',
  'Needful',
  'Need',
  'Needs',
  'Needfully',
  '20',
  'Attentive',
  'Attention',
  'Attends',
  'Attentively',
  '21',
  'Controlled',
  'Control',
  'Controls',
  'Controllably',
  '22',
  'Graceful',
  'Grace',
  'Graces',
  'Gracefully',
  '23',
  'Assimilated',
  'Assimilation',
  'Assimilates',
  'Assimilably',
  '24',
  'Rationalised',
  'Rationalisation',
  'Rationalises',
  'Rationally',
  '25',
  'Innocent',
  'Innocence',
  'Innocences',
  'Innocently',
  '26',
  'Tricky',
  'Trickster',
  'Tricks',
  'Trickily',
  '27',
  'Caring',
  'Care',
  'Cares',
  'Carefully',
  '28',
  'Risky',
  'Risk',
  'Risks',
  'Riskily',
  '29',
  'Persevered',
  'Perseverance',
  'Perseveres',
  'Perseveringly',
  '30',
  'Fiery',
  'Fire',
  'Fires',
  'Fiercely',
  '31',
  'Leading',
  'Lead',
  'Leads',
  'Leadingly',
  '32',
  'Failing',
  'Failure',
  'Fails',
  'Failingly',
  '33',
  'Remembered',
  'Memory',
  'Remembers',
  'Privately',
  '34',
  'Powerful',
  'Power',
  'Powers',
  'Powerfully',
  '35',
  'Progressive',
  'Change',
  'Changes',
  'Progressively',
  '36',
  'Endarkened',
  'Feeling',
  'Feels',
  'Fully',
  '37',
  'Friendful',
  'Friend',
  'Befriends',
  'Friendly',
  '38',
  'Fighting',
  'Fighter',
  'Fights',
  'Oppositely',
  '39',
  'Provocative',
  'Provocation',
  'Provokes',
  'Provocatively',
  '40',
  'Loyal',
  'Worker',
  'Works',
  'Loyally',
  '41',
  'Fanciful',
  'Fantasy',
  'Fantasises',
  'Fancifully',
  '42',
  'Ending',
  'End',
  'Ends',
  'Happily Ever After',
  '43',
  'Insightful',
  'Insight',
  'Insights',
  'Insightfully',
  '44',
  'Alertful',
  'Alert',
  'Alerts',
  'Alertly',
  '45',
  'Bossy',
  'Boss',
  'Bosses',
  'Boastfully',
  '46',
  'Determined',
  'Determination',
  'Determines',
  'Determinately',
  '47',
  'Oppressed',
  'Oppression',
  'Oppresses',
  'Oppressively',
  '48',
  'Deep',
  'Depth',
  'Deepens',
  'Deeply',
  '49',
  'Revolutionary',
  'Revolution',
  'Revolutionizes',
  'Revolutionarily',
  '50',
  'Valuable',
  'Value',
  'Values',
  'Valuably',
  '51',
  'Shocking',
  'Shock',
  'Shocks',
  'Shockingly',
  '52',
  'Mounted',
  'Mountain',
  'Mounts',
  'Mountfully',
  '53',
  'First',
  'Beginning',
  'Begins',
  'At the Beginning',
  '54',
  'Ambitious',
  'Ambition',
  'Drives',
  'Ambitiously',
  '55',
  'Spirited',
  'Spirit',
  'Spirits',
  'Spiritually',
  '56',
  'Believed',
  'Believer',
  'Believes',
  'Wonderingly',
  '57',
  'Gentle',
  'GentleWind',
  'Blows',
  'Gently',
  '58',
  'Joyous',
  'Joy',
  'Enjoys',
  'Joyously',
  '59',
  'Sexual',
  'Sex',
  'Disperses',
  'Sexually',
  '60',
  'Limited',
  'Limitation',
  'Limits',
  'Limitedly',
  '61',
  'Truthful',
  'Truth',
  'Truths',
  'Truthfully',
  '62',
  'Detailed',
  'Detail',
  'Details',
  'Detailedly',
  '63',
  'Doubting',
  'Doubt',
  'Doubts',
  'Doubtfully',
  '64',
  'Confusing',
  'Confusion',
  'Confuses',
  'Confusingly',
];

final List<String> hexagramAdjectiveList = [
  'Zero',
  'Creative',
  'Responsive',
  'Different',
  'Chaotic',
  'Patient',
  'Conflicting',
  'Interactive',
  'Contributing',
  'Focused',
  'Selfing',
  'Ideal',
  'Cautious',
  'Secret',
  'Wealthy',
  'Extreme',
  'Skillful',
  'Hierarchical',
  'Corrective',
  'Needful',
  'Attentive',
  'Controlled',
  'Graceful',
  'Assimilated',
  'Rationalised',
  'Innocent',
  'Tricky',
  'Caring',
  'Risky',
  'Persevered',
  'Fiery',
  'Leading',
  'Failing',
  'Remembered',
  'Powerful',
  'Progressive',
  'Endarkened',
  'Friendful',
  'Fighting',
  'Provocative',
  'Loyal',
  'Fanciful',
  'Ending',
  'Insightful',
  'Alertful',
  'Bossy',
  'Determined',
  'Oppressed',
  'Deep',
  'Revolutionary',
  'Valuable',
  'Shocking',
  'Mounted',
  'First',
  'Ambitious',
  'Spirited',
  'Believed',
  'Gentle',
  'Joyous',
  'Sexual',
  'Limited',
  'Truthful',
  'Detailed',
  'Doubting',
  'Confusing',
];

final List<String> hexagramSubjectList = [
  'Zero',
  'Creativity',
  'Response',
  'Mutation',
  'Answer',
  'Patience',
  'Conflict',
  'Interaction',
  'Contribution',
  'Focus',
  'Self',
  'Idea',
  'Caution',
  'Secret',
  'Wealth',
  'Extreme',
  'Skill',
  'Hierarchy',
  'Correction',
  'Need',
  'Attention',
  'Control',
  'Grace',
  'Assimilation',
  'Rationalisation',
  'Innocence',
  'Trickster',
  'Care',
  'Risk',
  'Perseverance',
  'Fire',
  'Lead',
  'Failure',
  'Memory',
  'Power',
  'Change',
  'Feeling',
  'Friend',
  'Fighter',
  'Provocation',
  'Worker',
  'Fantasy',
  'End',
  'Insight',
  'Alert',
  'Boss',
  'Determination',
  'Oppression',
  'Depth',
  'Revolution',
  'Value',
  'Shock',
  'Mountain',
  'Beginning',
  'Ambition',
  'Spirit',
  'Believer',
  'GentleWind',
  'Joy',
  'Sexuality',
  'Limitation',
  'Truth',
  'Detail',
  'Doubt',
  'Confusion',
];

final List<String> hexagramVerbList = [
  'Zero',
  'Creates',
  'Responds',
  'Mutates',
  'Answers',
  'Waits',
  'Conflicts',
  'Interacts',
  'Contributes',
  'Focuses',
  'Selfs',
  'Ideas',
  'Cautions',
  'Hides',
  'Enriches',
  'Extremes',
  'Identifies',
  'Organizes',
  'Corrects',
  'Needs',
  'Attends',
  'Controls',
  'Graces',
  'Assimilates',
  'Rationalises',
  'Innocences',
  'Tricks',
  'Cares',
  'Risks',
  'Perseveres',
  'Fires',
  'Leads',
  'Fails',
  'Remembers',
  'Powers',
  'Changes',
  'Feels',
  'Befriends',
  'Fights',
  'Provokes',
  'Works',
  'Fantasises',
  'Ends',
  'Insights',
  'Alerts',
  'Bosses',
  'Determines',
  'Oppresses',
  'Deepens',
  'Revolutionizes',
  'Values',
  'Shocks',
  'Mounts',
  'Begins',
  'Drives',
  'Spirits',
  'Believes',
  'Blows',
  'Enjoys',
  'Disperses',
  'Limits',
  'Truths',
  'Details',
  'Doubts',
  'Confuses',
];

final List<String> hexagramVerbNewList = [
  'Zero',
  'Creates',
  'Responds',
  'Mutates',
  'will Answer',
  'will Wait',
  'Conflicts',
  'will Interact',
  'Contributes',
  'will Focus',
  'Selfs',
  'Idead',
  'Cautions',
  'Hid',
  'Enriches',
  'will Extreme',
  'will Identify',
  'will Organize',
  'will Correct',
  'Needs',
  'Attends',
  'Controls',
  'Graces',
  'Assimilates',
  'Rationalises',
  'Innocences',
  'Tricks',
  'Cares',
  'Risks',
  'Persevered',
  'Fired',
  'will Lead',
  'Fails',
  'Remembered',
  'Powers',
  'Changed',
  'Felt',
  'Befriends',
  'Fights',
  'Provokes',
  'Works',
  'Fantasised',
  'Ended',
  'Insights',
  'Alerts',
  'Bosses',
  'Determined',
  'Oppressed',
  'will Deepen',
  'Revolutionizes',
  'Values',
  'Shocks',
  'will Mount',
  'Began',
  'Drives',
  'Spirits',
  'Believed',
  'Blows',
  'will Enjoy',
  'Disperses',
  'Limits',
  'Truths',
  'will Detail',
  'will Doubt',
  'Confused',
];

final List<String> hexagramAdverbList = [
  'Zero',
  'Creatively',
  'Responsively',
  'Differently',
  'Chaotically',
  'Patiently',
  'Conflictingly',
  'Interactively',
  'Uniquely',
  'Focusingly',
  'Selfingly',
  'Ideally',
  'Cautiously',
  'Secretly',
  'Wealthfully',
  'Extremely',
  'Skillfully',
  'Hierarchically',
  'Correctly',
  'Needfully',
  'Attentively',
  'Controllably',
  'Gracefully',
  'Assimilably',
  'Rationally',
  'Innocently',
  'Trickily',
  'Carefully',
  'Riskily',
  'Perseveringly',
  'Fiercely',
  'Leadingly',
  'Failingly',
  'Privately',
  'Powerfully',
  'Progressively',
  'Fully',
  'Friendly',
  'Oppositely',
  'Provocatively',
  'Loyally',
  'Fancifully',
  'Happily Ever After',
  'Insightfully',
  'Alertly',
  'Boastfully',
  'Determinately',
  'Oppressively',
  'Deeply',
  'Revolutionarily',
  'Valuably',
  'Shockingly',
  'Mountfully',
  'At the Beginning',
  'Ambitiously',
  'Spiritually',
  'Wonderingly',
  'Gently',
  'Joyously',
  'Sexually',
  'Limitedly',
  'Truthfully',
  'Detailedly',
  'Doubtfully',
  'Confusingly',
];

final List<int> hexCarouselValueList = [
//'1','43'...,
  111,
  211,
  311,
  411,
  121,
  221,
  321,
  421,
  131,
  231,
  331,
  431,
  141,
  241,
  341,
  441,
  112,
  212,
  312,
  412,
  122,
  222,
  322,
  422,
  132,
  232,
  332,
  432,
  142,
  242,
  342,
  442,
  113,
  213,
  313,
  413,
  123,
  223,
  323,
  423,
  133,
  233,
  333,
  433,
  143,
  243,
  343,
  443,
  114,
  214,
  314,
  414,
  124,
  224,
  324,
  424,
  134,
  234,
  334,
  434,
  144,
  244,
  344,
  444,
];

final List<int> hexCarouselWheelOrderList = [
//'1','43'...,
  111,
  211,
  311,
  411,
  121,
  221,
  321,
  421,
  131,
  231,
  331,
  431,
  141,
  241,
  341,
  441,

  112,
  212,
  312,
  412,
  122,
  222,
  322,
  422,
  132,
  232,
  332,
  432,
  142,
  242,
  342,
  442,

  444,
  344,
  244,
  144,
  434,
  334,
  234,
  134,
  424,
  324,
  224,
  124,
  414,
  314,
  214,
  114,

  443,
  343,
  243,
  143,
  433,
  333,
  233,
  133,
  423,
  323,
  223,
  123,
  413,
  313,
  213,
  113,













];

/// FULL SENTENCE

final List<String> hexBasicList = [
  'assets/complex.png',
  'assets/simple.png',
  'assets/breath.png',
  'assets/silence.png',
];

final List<String> hexBasicMixList = [
  'assets/complexup.png',
  'assets/simplein.png',
  'assets/breathout.png',
  'assets/silencedown.png',
];

final List<String> hexBasicDownList = [
  'assets/complexdown.png',
  'assets/simpledown.png',
  'assets/breathdown.png',
  'assets/silencedown.png',
];

final List<String> hexBasicUpList = [
  'assets/complexup.png',
  'assets/simpleup.png',
  'assets/breathup.png',
  'assets/silenceup.png',
];

final List<String> hexDualList = [
  'assets/complexup.png',
  'assets/complexdown.png',
  'assets/simplein.png',
  'assets/simpledown.png',
  'assets/breathup.png',
  'assets/breathout.png',
  'assets/silenceup.png',
  'assets/silencedown.png',
];

final List<String> hexFullList = [
  'assets/complexup.png',
  'assets/complexin.png',
  'assets/complexout.png',
  'assets/complexdown.png',
  'assets/simpleup.png',
  'assets/simplein.png',
  'assets/simpleout.png',
  'assets/simpledown.png',
  'assets/breathup.png',
  'assets/breathin.png',
  'assets/breathout.png',
  'assets/breathdown.png',
  'assets/silenceup.png',
  'assets/silencein.png',
  'assets/silenceout.png',
  'assets/silencedown.png',
];

final List<String> hexNamesList = [
  'COMPLEX',
  'SIMPLE',
  'breath',
  'silence',
];

// variables
List<int> hexagramslist = List<int>.generate(65, (counter) => counter++);
var hexagramslistfinal = hexagramslist.getRange(1, hexagramslist.length);

// SLIDERS

final List<Widget> planetsFullSliders = planetsfullList
    .map((planet) => Container(
          margin: const EdgeInsets.all(5.0),
          child: ClipRRect(
              borderRadius: const BorderRadius.all(Radius.circular(5.0)),
              child: Stack(
                children: <Widget>[
                  Image.asset(planet, fit: BoxFit.cover, width: 100.0),
                ],
              )),
        ))
    .toList();

final List<Widget> planetsCrossSliders = planetsCrossList
    .map((planet) => Container(
          margin: const EdgeInsets.all(5.0),
          child: ClipRRect(
              borderRadius: const BorderRadius.all(Radius.circular(5.0)),
              child: Stack(
                children: <Widget>[
                  Image.asset(planet, fit: BoxFit.cover, width: 100.0),
                ],
              )),
        ))
    .toList();

final List<Widget> allItemsSliders = hexFullList
    .map((hexImage) => CircleAvatar(
        minRadius: 100.0,
        maxRadius: 100.0,
        backgroundImage: AssetImage(hexImage)))
    .toList();

final List<Widget> downHexagramSliders = hexBasicDownList
    .map((item) => Container(
          margin: const EdgeInsets.all(5.0),
          child: ClipRRect(
              borderRadius: const BorderRadius.all(Radius.circular(5.0)),
              child: Stack(
                children: <Widget>[
                  Image.asset(item, fit: BoxFit.cover, width: 500.0),
                ],
              )),
        ))
    .toList();

final List<Widget> mixHexagramSliders = hexBasicMixList
    .map((item) => Container(
          margin: const EdgeInsets.all(5.0),
          child: ClipRRect(
              borderRadius: const BorderRadius.all(Radius.circular(5.0)),
              child: Stack(
                children: <Widget>[
                  Image.asset(item, fit: BoxFit.cover, width: 500.0),
                ],
              )),
        ))
    .toList();

final List<Widget> mixHexagramSlidersNew = hexBasicMixList
    .map((hexagrambasicmix) => CircleAvatar(
        minRadius: 100.0,
        maxRadius: 100.0,
        backgroundImage: AssetImage(hexagrambasicmix)))
    .toList();

// DROPDOWN

final List<DropdownMenuItem<int>> hexDropDownNumbersList =
    hexagramslistfinal.map((int hexagramsnew) {
  return DropdownMenuItem(
    value: hexagramsnew,
    child: Text(
      hexagramsnew.toString(),
      style: const TextStyle(
        color: Colors.grey,
      ),
    ),
  );
}).toList();

final List<DropdownMenuItem<String>> fontHexList =
    fontHexOrderList.map((String chosenHexagrams) {
  return DropdownMenuItem(
    value: chosenHexagrams,
    child: Text(chosenHexagrams,
        style: const TextStyle(
          color: Colors.black,
          fontSize: 30.0,
          fontFamily: 'iChing',
        )),
  );
}).toList();

final List<DropdownMenuItem<int>> orderHexagramsWheelList =
    orderHexagramsWheel.map((int orderWheelHexagrams) {
  return DropdownMenuItem(
      value: orderWheelHexagrams,
      child: Text(orderWheelHexagrams.toString(),
          style: const TextStyle(
            color: Colors.grey,
          )));
}).toList();

final List<DropdownMenuItem<String>> iChingFontList =
    fontHexOrderList.map((String fontHexagrams) {
  return DropdownMenuItem(
    value: fontHexagrams,
    child: Text(fontHexagrams,
        style: const TextStyle(
          color: Colors.black,
          fontSize: 30.0,
          fontFamily: 'iChing',
        )),
  );
}).toList();

// map

final fontHexagramsMap = fontHexOrderList.asMap();
final fontHexagramsWheelMap = fontHexNumbersList.asMap();
